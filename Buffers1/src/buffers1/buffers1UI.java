package buffers1;

import java.awt.Toolkit;
import tatukgis.jdk.TGIS_Color;
import tatukgis.jdk.TGIS_LayerVector;
import tatukgis.jdk.TGIS_Point;
import tatukgis.jdk.TGIS_Shape;
import tatukgis.jdk.TGIS_Topology;
import tatukgis.jdk.TGIS_Utils;
import tatukgis.rtl.TPoint;

public class buffers1UI extends javax.swing.JFrame {

    public buffers1UI() {
        initComponents();
        initOwn();
    }

    private void initOwn(){
        TGIS_LayerVector lb;
        GIS.Lock();
        GIS.Open(TGIS_Utils.GisSamplesDataDirDownload() + "/Samples/Topology/topology.shp");
        shp_id = 2;
        lb = new TGIS_LayerVector();
        lb.setName("buffer");
        lb.setTransparency(50);
        lb.getParams().getArea().setColor(TGIS_Color.getRed());
        GIS.Add(lb);
        GIS.Unlock();
        GIS.FullExtent();
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        GIS = new tatukgis.jdk.TGIS_ViewerWnd();
        jToolBar1 = new javax.swing.JToolBar();
        btnMinus = new javax.swing.JButton();
        slider = new javax.swing.JSlider();
        btnPlus = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Buffers1 - TatukGIS DK11 sample");
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/resources/icon.png")));
        setSize(new java.awt.Dimension(800, 600));

        GIS.setMode(tatukgis.jdk.TGIS_ViewerMode.Select);
        GIS.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                GISMousePressed(evt);
            }
        });

        jToolBar1.setRollover(true);

        btnMinus.setText("-");
        btnMinus.setFocusable(false);
        btnMinus.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnMinus.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnMinus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMinusActionPerformed(evt);
            }
        });
        jToolBar1.add(btnMinus);

        slider.setMaximum(50);
        slider.setMinimum(-50);
        slider.setToolTipText("");
        slider.setValue(0);
        slider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                sliderStateChanged(evt);
            }
        });
        jToolBar1.add(slider);

        btnPlus.setText("+");
        btnPlus.setFocusable(false);
        btnPlus.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnPlus.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnPlus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPlusActionPerformed(evt);
            }
        });
        jToolBar1.add(btnPlus);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(GIS, javax.swing.GroupLayout.DEFAULT_SIZE, 800, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(7, 7, 7)
                .addComponent(GIS, javax.swing.GroupLayout.DEFAULT_SIZE, 568, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void sliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_sliderStateChanged
        TGIS_LayerVector ll;
        TGIS_LayerVector lb;
        TGIS_Shape shp;
        TGIS_Shape shpTmp;
        TGIS_Topology tpl;
        
        ll = (TGIS_LayerVector)GIS.getItems().getItems(0);
        if( ll == null) return;
        lb = (TGIS_LayerVector)GIS.Get("buffer");
        if( lb == null) return;
        shp = ll.GetShape(shp_id);
        if( shp == null) return;
        tpl = new TGIS_Topology();
        try{
            lb.RevertShapes();
            shpTmp = tpl.MakeBuffer(shp, slider.getValue() * 1000); 
            if(shpTmp != null){
                lb.AddShape(shpTmp);
                shpTmp = null;
            }
            lb.RecalcExtent();
            GIS.RecalcExtent();
            GIS.FullExtent();
        }finally{
            tpl = null;
        }
    }//GEN-LAST:event_sliderStateChanged

    private void btnMinusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMinusActionPerformed
        if(evt.getSource() == btnMinus){
            if(slider.getValue() > slider.getMinimum()){
                slider.setValue(slider.getValue()-1);
            }
        }
    }//GEN-LAST:event_btnMinusActionPerformed

    private void btnPlusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPlusActionPerformed
        if(evt.getSource() == btnPlus){
            if(slider.getValue() < slider.getMaximum()){
                slider.setValue(slider.getValue()+1);
            }
        }    }//GEN-LAST:event_btnPlusActionPerformed

    private void GISMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_GISMousePressed
        TGIS_Point ptg;
        TGIS_Shape shp;
        
        if(GIS.getIsEmpty()) return;
        if(GIS.getInPaint()) return;
        
        ptg = GIS.ScreenToMap(new TPoint(evt.getX(), evt.getY()));
        shp = (TGIS_Shape)GIS.Locate(ptg, 5/GIS.getZoom());
        if(shp != null){
            if(shp.getIsSelected() == false){
                shp_id = (int)shp.getUid();
                //temporary solution until Flash() method is fixed
                shp.getLayer().DeselectAll();
                shp.setIsSelected(true);
            }
        }
        GIS.InvalidateWholeMap();
    }//GEN-LAST:event_GISMousePressed

    public static void main(String args[]) {
        /* Set the Windows look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(buffers1UI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(buffers1UI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(buffers1UI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(buffers1UI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new buffers1UI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private tatukgis.jdk.TGIS_ViewerWnd GIS;
    private javax.swing.JButton btnMinus;
    private javax.swing.JButton btnPlus;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JSlider slider;
    // End of variables declaration//GEN-END:variables
    private int shp_id;
}
