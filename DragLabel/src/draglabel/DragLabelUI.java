package draglabel;

import java.awt.Toolkit;
import java.lang.reflect.InvocationTargetException;
import java.util.Random;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.SwingUtilities;
import tatukgis.jdk.TGIS_Color;
import tatukgis.jdk.TGIS_DimensionType;
import tatukgis.jdk.TGIS_Extent;
import tatukgis.jdk.TGIS_FieldType;
import tatukgis.jdk.TGIS_LabelPosition;
import tatukgis.jdk.TGIS_LayerVector;
import tatukgis.jdk.TGIS_Lock;
import tatukgis.jdk.TGIS_PenStyle;
import tatukgis.jdk.TGIS_Point;
import tatukgis.jdk.TGIS_RendererAbstract;
import tatukgis.jdk.TGIS_Shape;
import tatukgis.jdk.TGIS_ShapeEvent;
import tatukgis.jdk.TGIS_ShapeEventArgs;
import tatukgis.jdk.TGIS_ShapeType;
import tatukgis.jdk.TGIS_Utils;
import tatukgis.rtl.TPoint;

public class DragLabelUI extends javax.swing.JFrame {

    public DragLabelUI() {
        initComponents();
        initOwn();
    }
    
    private void initOwn(){
        TGIS_LayerVector ll;
        TGIS_Shape shp;
        TGIS_Point ptg;
        Random rnd;
        int i;
        
        ll = new TGIS_LayerVector();
        ll.getParams().getMarker().setSymbol(TGIS_Utils.getSymbolList().Prepare(TGIS_Utils.GisSamplesDataDirDownload() + "/Symbols/2267.cgm"));
        ll.setName("realpoints");
        ll.setCachedPaint(false);
        
        GIS.Add(ll);
        ll.AddField("name", TGIS_FieldType.String,100,0);
        ll.setExtent(TGIS_Utils.GisExtent(-180, -180, 180, 180));
        
        ll = new TGIS_LayerVector();
        ll.setName("sidekicks");
        ll.getParams().getMarker().setSize(0);
        ll.getParams().getLabels().setPosition(TGIS_LabelPosition.MiddleCenter);
        ll.setCachedPaint(false);
        
        GIS.Add(ll);
        ll.addPaintShapeLabelEvent(new TGIS_ShapeEvent() {
            @Override
            public void Invoke(Object o, TGIS_ShapeEventArgs tgs) {
                TPoint ptA, ptB;
                TGIS_LayerVector ll;
                TGIS_Shape shape = tgs.getShape();
                TGIS_Shape shp;
                TGIS_RendererAbstract rdr;

                ll = (TGIS_LayerVector)GIS.Get( "realpoints" );
                shp = ll.GetShape( shape.getUid() );
                ptA = shape.getViewer().Ref.MapToScreen(shp.GetPoint(0,0));
                ptB = shape.getViewer().Ref.MapToScreen(shape.GetPoint(0,0));
                rdr = GIS.getRenderer();        
                rdr.getCanvasPen().Color = TGIS_Color.getBlue();
                rdr.getCanvasPen().Style = TGIS_PenStyle.Solid;
                rdr.getCanvasPen().Width = 1;
                
                rdr.CanvasDrawLine(ptA.X, ptA.Y, ptB.X, ptB.Y);

                shape.getParams().getLabels().setValue(shp.GetField("name").toString());
                shape.DrawLabel();
            }
        });

        ll.getParams().getLabels().setAllocator(false);
        GIS.FullExtent();
        rnd = new Random();
        for( i = 0; i < 20; i ++){
            ptg = new TGIS_Point(rnd.nextInt(360) - 180, rnd.nextInt(180) - 90);
        
            //add point
            shp = ((TGIS_LayerVector)GIS.Get("realpoints")).CreateShape( TGIS_ShapeType.Point, TGIS_DimensionType.XY);
            shp.Lock(TGIS_Lock.Extent);
            shp.AddPart();
            shp.AddPoint(ptg);
            shp.getParams().getMarker().setSymbolRotate(shp.getUid());
            shp.getParams().getMarker().setSize(250);
            shp.getParams().getMarker().setColor(TGIS_Color.FromRGB((byte)rnd.nextInt(256), (byte)rnd.nextInt(256), (byte)rnd.nextInt(256)));
            shp.SetField("name", text + shp.getUid());
            shp.Unlock();


            //add sidekicks
            shp = ((TGIS_LayerVector)GIS.Get("sidekicks")).CreateShape( TGIS_ShapeType.Point);
            shp.Lock(TGIS_Lock.Extent);
            shp.AddPart();

            ptg.X += 15/GIS.getZoom();
            ptg.Y += 15/GIS.getZoom();
            shp.AddPoint(ptg);
            shp.Unlock();
        }
        GIS.FullExtent();
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        GIS = new tatukgis.jdk.TGIS_ViewerWnd();
        btnAnimate = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("DragLabel - TatukGIS DK11 sample");
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/resources/icon.png")));
        setSize(new java.awt.Dimension(800, 600));

        GIS.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                GISMouseDragged(evt);
            }
        });
        GIS.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                GISMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                GISMouseReleased(evt);
            }
        });

        btnAnimate.setText("Animate");
        btnAnimate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAnimateActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(GIS, javax.swing.GroupLayout.DEFAULT_SIZE, 800, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnAnimate)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnAnimate)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(GIS, javax.swing.GroupLayout.DEFAULT_SIZE, 560, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void GISMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_GISMousePressed
        TGIS_LayerVector ll;
        TGIS_Shape shp;
        if(GIS.getIsEmpty()) return;
        
        ll = (TGIS_LayerVector)GIS.Get("sidekicks");
        shp = ll.Locate(GIS.ScreenToMap(new TPoint(evt.getX(), evt.getY())), 100/GIS.getZoom());
        currShp = shp;
        if(currShp == null) return;
        GIS.getEditor().MouseBegin(new TPoint(evt.getX(), evt.getY()), true);
    }//GEN-LAST:event_GISMousePressed

    private void GISMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_GISMouseReleased
        if(GIS.getIsEmpty()) return;
        currShp = null;
    }//GEN-LAST:event_GISMouseReleased

    @SuppressWarnings("deprecation")
    private void GISMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_GISMouseDragged
        TGIS_LayerVector ll ;
        TGIS_Shape shp ;
        TGIS_Point ptgA ;
        TGIS_Point ptgB ;
        TGIS_Extent ex = new TGIS_Extent();        
        if(GIS.getIsEmpty()) return;
        //if(currShp == null) return;
        
        ptgA = currShp.GetPoint(0,0);
        ll = (TGIS_LayerVector)GIS.Get("realpoints");
        shp = ll.GetShape(currShp.getUid());
        ptgB = shp.GetPoint(0,0);
        ex.XMin = Math.min( ptgA.X, ptgB.X);
        ex.YMin = Math.min( ptgA.Y, ptgB.Y );
        ex.XMax = Math.max( ptgA.X, ptgB.X );
        ex.YMax = Math.max( ptgA.Y, ptgB.Y );
        
        GIS.InvalidateExtent(ex, true);
        
        ptgA = GIS.ScreenToMap(new TPoint(evt.getX(), evt.getY()));
        if( TGIS_Utils.GisIsPointInsideExtent(ptgA, GIS.getExtent())){
            currShp.SetPosition(ptgA, null, 0);
        }
        ptgA = currShp.GetPoint(0,0);
        ll = (TGIS_LayerVector)GIS.Get("realpoints");
        shp = ll.GetShape( currShp.getUid() );
        ptgB = shp.GetPoint(0,0);
        ex.XMin = Math.min( ptgA.X, ptgB.X);
        ex.YMin = Math.min( ptgA.Y, ptgB.Y );
        ex.XMax = Math.max( ptgA.X, ptgB.X );
        ex.YMax = Math.max( ptgA.Y, ptgB.Y );
        GIS.InvalidateExtent(ex, true);
    }//GEN-LAST:event_GISMouseDragged

    private void btnAnimateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAnimateActionPerformed
        new Thread(new Runnable() {
            @Override
            public void run() {
                TGIS_Shape shp;
                int i;
                
                for (i = 0; i < 90; i++)
                {
                    try {
                        SwingUtilities.invokeAndWait(new Runnable() {
                            @Override
                            public void run() {
                                TGIS_LayerVector ll;
                                TGIS_Shape shp;
                                TGIS_Point ptgA;
                                TGIS_Point ptgB;
                                TGIS_Extent ex;
                                int x, y;
                                
                                x = 2;
                                y = 1;
                                
                                ex = new TGIS_Extent();
                                shp = ((TGIS_LayerVector)GIS.Get("realpoints")).GetShape(5);

                                // move main shape
                                ptgA = shp.GetPoint(0, 0);
                                ptgA.X += x;
                                ptgA.Y += y;
                                shp.SetPosition(ptgA, null, 0);

                                // move "sidekick"
                                ll = (TGIS_LayerVector)GIS.Get("sidekicks");
                                shp = ll.GetShape(shp.getUid());
                                ptgB = shp.GetPoint(0, 0);
                                ptgB.X += x;
                                ptgB.Y += y;
                                shp.SetPosition(ptgB, null, 0);

                                // aditional invalidation - we have now a starnge big
                                // combo shape
                                ex.XMin = Math.min(ptgA.X, ptgB.X);
                                ex.YMin = Math.min(ptgA.Y, ptgB.Y);
                                ex.XMax = Math.max(ptgA.X, ptgB.X);
                                ex.YMax = Math.max(ptgA.Y, ptgB.Y);                                
                            }
                        });
                    } catch (InterruptedException | InvocationTargetException ex) {
                        Logger.getLogger(DragLabelUI.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    try {
                        Thread.sleep(50);
                    } catch (InterruptedException ex) {
                        Logger.getLogger(DragLabelUI.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
            }
        }).start();
    }//GEN-LAST:event_btnAnimateActionPerformed

    public static void main(String args[]) {
        /* Set the Windows look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DragLabelUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DragLabelUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DragLabelUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DragLabelUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DragLabelUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private tatukgis.jdk.TGIS_ViewerWnd GIS;
    private javax.swing.JButton btnAnimate;
    // End of variables declaration//GEN-END:variables
    String text = "Ship";
    TGIS_Shape currShp;
}
