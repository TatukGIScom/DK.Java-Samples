
package encode;

import java.awt.Toolkit;
import javax.swing.JOptionPane;
import tatukgis.jdk.TGIS_Color;
import tatukgis.jdk.TGIS_LayerSHP;
import tatukgis.jdk.TGIS_LayerVector;
import tatukgis.jdk.TGIS_ReadWriteEvent;
import tatukgis.jdk.TGIS_ReadWriteEventArgs;
import tatukgis.jdk.TGIS_ShapeType;
import tatukgis.jdk.TGIS_Utils;

public class EncodeUI extends javax.swing.JFrame {

    public EncodeUI() {
        initComponents();
        initOwn();
    }

    private void initOwn(){
       write = new TGIS_ReadWriteEvent() {
            @Override
            public void Invoke(Object o, TGIS_ReadWriteEventArgs tgsrw) {
                int i;
                byte[] buff;
                buff = tgsrw.getBuffer();

                for( i = 0 ; i < tgsrw.getCount() ; i++){
                    buff[i] = (byte)(buff[i] ^ ((tgsrw.getPos() + i) % 256));
                }
            }
        };
        read = new TGIS_ReadWriteEvent() {
            @Override
            public void Invoke(Object o, TGIS_ReadWriteEventArgs tgsrw) {
                int i;
                byte[] buff;
                buff = tgsrw.getBuffer();

                for( i = 0 ; i < tgsrw.getCount() ; i++){
                    buff[i] = (byte)(buff[i] ^ ((tgsrw.getPos() + i) % 256));
                }
            }
        };
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        GIS = new tatukgis.jdk.TGIS_ViewerWnd();
        jToolBar1 = new javax.swing.JToolBar();
        btnClose = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JToolBar.Separator();
        btnOpenBase = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JToolBar.Separator();
        btnEncode = new javax.swing.JButton();
        jSeparator3 = new javax.swing.JToolBar.Separator();
        btnOpenEncoded = new javax.swing.JButton();
        jSeparator4 = new javax.swing.JToolBar.Separator();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Encode - TatukGIS DK11 sample");
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/resources/icon.png")));
        setSize(new java.awt.Dimension(800, 600));

        jToolBar1.setRollover(true);

        btnClose.setText("Close all");
        btnClose.setFocusable(false);
        btnClose.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnClose.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCloseActionPerformed(evt);
            }
        });
        jToolBar1.add(btnClose);
        jToolBar1.add(jSeparator1);

        btnOpenBase.setText("Open base");
        btnOpenBase.setFocusable(false);
        btnOpenBase.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnOpenBase.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnOpenBase.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOpenBaseActionPerformed(evt);
            }
        });
        jToolBar1.add(btnOpenBase);
        jToolBar1.add(jSeparator2);

        btnEncode.setText("Encode layer");
        btnEncode.setFocusable(false);
        btnEncode.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnEncode.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnEncode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEncodeActionPerformed(evt);
            }
        });
        jToolBar1.add(btnEncode);
        jToolBar1.add(jSeparator3);

        btnOpenEncoded.setText("Open encoded");
        btnOpenEncoded.setFocusable(false);
        btnOpenEncoded.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnOpenEncoded.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnOpenEncoded.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOpenEncodedActionPerformed(evt);
            }
        });
        jToolBar1.add(btnOpenEncoded);
        jToolBar1.add(jSeparator4);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(GIS, javax.swing.GroupLayout.DEFAULT_SIZE, 800, Short.MAX_VALUE)
            .addComponent(jToolBar1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(GIS, javax.swing.GroupLayout.DEFAULT_SIZE, 569, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCloseActionPerformed
        if(GIS.getIsEmpty()) return;
        
        GIS.Close();
    }//GEN-LAST:event_btnCloseActionPerformed

    private void btnOpenBaseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOpenBaseActionPerformed
        TGIS_LayerSHP ll;
        
        GIS.Close();
        
        ll = new TGIS_LayerSHP();
        ll.setPath(TGIS_Utils.GisSamplesDataDirDownload() + "/World/WorldDCW/world.shp");
        ll.setName("base");
        ll.getParams().getLabels().setField("NAME");
        GIS.Add(ll);
        GIS.FullExtent();

    }//GEN-LAST:event_btnOpenBaseActionPerformed

    private void btnEncodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEncodeActionPerformed
        TGIS_LayerSHP ld;
        TGIS_LayerVector ls;
        
        if(GIS.getIsEmpty()){
            JOptionPane.showMessageDialog(this, "Open base layer first");
            return;
        }
        
        ls = (TGIS_LayerVector)GIS.getItems().getItems(0);
        if("encoded".equals(ls.getName())){
            JOptionPane.showMessageDialog(this, "Layer already encoded, open base layer first");
            return;
        }
        
        ld = new TGIS_LayerSHP();
        ld.setReadEvent(read);
        ld.setWriteEvent(write);
        ld.setPath("encoded.shp");
        ld.ImportLayer(ls, GIS.getExtent(), TGIS_ShapeType.Polygon, "", false);
        ld = null;
    }//GEN-LAST:event_btnEncodeActionPerformed

    private void btnOpenEncodedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOpenEncodedActionPerformed
        TGIS_LayerSHP ll;
        
        GIS.Close();
                
        
        ll = new TGIS_LayerSHP();
        ll.setPath("encoded.shp");
        ll.setName("encoded");
        ll.setReadEvent(read);
        ll.setWriteEvent(write);
        ll.getParams().getLabels().setField("NAME");
        ll.getParams().getArea().setColor(TGIS_Color.getGreen());
        GIS.Add(ll);

        GIS.FullExtent();
    }//GEN-LAST:event_btnOpenEncodedActionPerformed

    public static void main(String args[]) {
        /* Set the Windows look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EncodeUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EncodeUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EncodeUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EncodeUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new EncodeUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private tatukgis.jdk.TGIS_ViewerWnd GIS;
    private javax.swing.JButton btnClose;
    private javax.swing.JButton btnEncode;
    private javax.swing.JButton btnOpenBase;
    private javax.swing.JButton btnOpenEncoded;
    private javax.swing.JToolBar.Separator jSeparator1;
    private javax.swing.JToolBar.Separator jSeparator2;
    private javax.swing.JToolBar.Separator jSeparator3;
    private javax.swing.JToolBar.Separator jSeparator4;
    private javax.swing.JToolBar jToolBar1;
    // End of variables declaration//GEN-END:variables
    private TGIS_ReadWriteEvent write;
    private TGIS_ReadWriteEvent read;
}
