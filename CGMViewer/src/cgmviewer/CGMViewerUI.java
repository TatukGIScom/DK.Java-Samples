package cgmviewer;

import java.awt.Toolkit;
import java.io.File;
import java.io.FilenameFilter;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import tatukgis.jdk.TGIS_Color;
import tatukgis.jdk.TGIS_DimensionType;
import tatukgis.jdk.TGIS_LabelPosition;
import tatukgis.jdk.TGIS_LayerVector;
import tatukgis.jdk.TGIS_Point;
import tatukgis.jdk.TGIS_Shape;
import tatukgis.jdk.TGIS_ShapeType;
import tatukgis.jdk.TGIS_Utils;

public class CGMViewerUI extends javax.swing.JFrame {

    public CGMViewerUI() throws IOException {
        initComponents();
        initOwn();
    }

    @SuppressWarnings("unchecked")
    private void initOwn(){
        File folder = new File( TGIS_Utils.GisSamplesDataDirDownload() + "/Symbols/");
        File[] listOfFiles;
        listOfFiles = folder.listFiles(new FilenameFilter() {
            @Override
            public boolean accept(File dir, String name) {
                return name.toLowerCase().endsWith(".cgm");
            }
        });
        for (int i = 0; i < listOfFiles.length; i++) {
            if (listOfFiles[i].isFile()) {
                listOfFiles[i] = new File(listOfFiles[i].getName());
            } 
            symbols.setListData(listOfFiles);
        }
        // new layer as a grid
        TGIS_LayerVector layer = new TGIS_LayerVector();
        GIS.Add(layer);
        layer.setExtent(TGIS_Utils.GisExtent(-90, -90, 90, 90));
        GIS.FullExtent();
        
        //add coordinate layout
        
        shp = layer.CreateShape(TGIS_ShapeType.Arc, TGIS_DimensionType.XY);
        shp.getParams().getLine().setWidth(1);
        shp.AddPart();
        shp.AddPoint( new TGIS_Point(-90, 0));
        shp.AddPoint( new TGIS_Point(90,0));
        
        shp = layer.CreateShape(TGIS_ShapeType.Arc, TGIS_DimensionType.XY);
        shp.getParams().getLine().setWidth(1);
        shp.AddPart();
        shp.AddPoint( new TGIS_Point(0, -90));
        shp.AddPoint( new TGIS_Point(0, 90));
        
        shp = layer.CreateShape(TGIS_ShapeType.Point, TGIS_DimensionType.XY);
        shp.getParams().getLine().setWidth(1);
        shp.AddPart();
        shp.AddPoint( new TGIS_Point(0, 0));
        
        
    }
    
    private void drawSymbol(){
        int w, h ;

        // create a symbol list
        shp.getParams().getMarker().setSymbol(TGIS_Utils.getSymbolList().Prepare(TGIS_Utils.GisSamplesDataDirDownload() + "/Symbols/" + symbols.getSelectedValue()));
        // calculate symbol size
        if (shp.getParams().getMarker().getSymbol() != null)
        {
            shp.getParams().getMarker().setSize(- Math.min( GIS.getWidth(), GIS.getHeight() ) * 2 / 3) ;          
            // prepare to obtain computed width/height
            shp.getParams().getMarker().getSymbol().Prepare(GIS, -5, TGIS_Color.getBlack(),	
                TGIS_Color.getBlack(), 0, 0,
                TGIS_LabelPosition.MiddleCenter,
                true                
            );
            w = shp.getParams().getMarker().getSymbol().getWidth()  ;
            h = shp.getParams().getMarker().getSymbol().getHeight() ;
            shp.getParams().getMarker().getSymbol().Unprepare() ;

            if (h < w) {
                shp.getParams().getMarker().setSize(shp.getParams().getMarker().getSize() * h / w);
            }
        }else {
            shp.getParams().getMarker().setSize(0);
        }

        // set attributes
        shp.getParams().getMarker().setColor(TGIS_Color.getRenderColor()) ;
        shp.getParams().getMarker().setOutlineColor(TGIS_Color.getRenderColor())  ;
          //updating wnd to show us changes
        GIS.InvalidateWholeMap(); 
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        symbols = new javax.swing.JList();
        btnRotate = new javax.swing.JButton();
        GIS = new tatukgis.jdk.TGIS_ViewerWnd();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("CGMViewer - TatukGIS DK11 sample");
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/resources/icon.png")));
        setSize(new java.awt.Dimension(800, 600));

        symbols.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                symbolsValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(symbols);

        btnRotate.setText("Rotate");
        btnRotate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRotateActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnRotate)
                        .addGap(0, 529, Short.MAX_VALUE))
                    .addComponent(GIS, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 600, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnRotate)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(GIS, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void symbolsValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_symbolsValueChanged
        drawSymbol();
    }//GEN-LAST:event_symbolsValueChanged

    private void btnRotateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRotateActionPerformed
        shp.getParams().getMarker().setSymbolRotate(shp.getParams().getMarker().getSymbolRotate() + Math.PI/2);
        shp.Invalidate();
    }//GEN-LAST:event_btnRotateActionPerformed


    public static void main(String args[]) {
        /* Set the Windows look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CGMViewerUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CGMViewerUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CGMViewerUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CGMViewerUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new CGMViewerUI().setVisible(true);
                } catch (IOException ex) {
                    Logger.getLogger(CGMViewerUI.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private tatukgis.jdk.TGIS_ViewerWnd GIS;
    private javax.swing.JButton btnRotate;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JList symbols;
    // End of variables declaration//GEN-END:variables
    private TGIS_Shape shp;

}
